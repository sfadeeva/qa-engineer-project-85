- summary: |
    Проверки возмрожности попробать игру незарегистророванным пользователем. 
  requirement: |
    Пользователь (незарегистрированыый) должен иметь возможность создать игру.
  prerequisites: |
    Открыта главная страница: https://codebattle.hexlet.io/
  test-data: |
    empty
  steps:
    - Визуально смотрим наличие кнопки "Попробовать простой бой" регистрации не требуется.
    - Кликаем по кнопке "Попробовать простой бой"
  expected-result: |
    Пользователь попадает в в игровое поле с заданием и полем для написания кода.

- summary: |
    Проверка создание игры с разными параметрами (уровень). 
  requirement: |
    Пользователь должен иметь возможность выбрать свой Уровень.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне появляется варианты выбора 4 уровня
    - Кликаем все Уровне поочередно
  expected-result: |
    Пользователь активизирует Уровень.

- summary: |
    Проверка создание игры с разными параметрами (игра с ботом).
  requirement: |
    Пользователь должен иметь возможность выбрать тип игры с ботом.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне появляется варианты выбора 4 Уровня
    - Кликаем 1 Уровень
    - Кликаем в поле "Тип игры" кнопку "с ботом"
    - Кликаем "Создать битву"
  expected-result: |
    Пользователь попадает в игру с ботом.
    
- summary: |
    Проверка создание игры с разными параметрами (игра с другом).
  requirement: |
    Пользователь должен иметь возможность выбрать тип игры с другом.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне появляется варианты выбора 4 Уровня
    - Кликаем 1 Уровень
    - Кликаем в поле "Тип игры" кнопку "с другом"
    - Выбираем из выпадающего списка соперника
    - Кликаем "Создать приглашение"
  expected-result: |
    Пользователь попадает на главную страницу с приглашением для выбранного соперника.
    
- summary: |
    Проверка создание игры с разными параметрами (игра с другими пользователями).
  requirement: |
    Пользователь должен иметь возможность выбрать тип игры с другими пользователями.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне появляется варианты выбора 4 Уровня
    - Кликаем 1 Уровень
    - Кликаем в поле "Тип игры" кнопку "с другими пользователями"
    - Кликаем "Создать игру"
  expected-result: |
    Пользователь попадает на главную страницу с возможностью продолжить или отменить игру.

- summary: |
    Проверка создание игры с разными параметрами (время игры).
  requirement: |
    Пользователь должен иметь возможность выбрать время игры.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне появляется варианты выбора 4 Уровня
    - Кликаем 1 Уровень
    - Кликаем в поле "Тип игры" кнопку "с ботом"
    - В поле "Контроль времени" бегунок выставляем в крайнее правое положение 60 мин.
    - Кликаем "Создать битву"
  expected-result: |
    Пользователь попадает в игру с ботом ТАЙМ-АУТ в верхнем поле 60 мин.
    
- summary: |
    Проверка возможности выбора задания.
  requirement: |
    Пользователь должен иметь возможность выбрать задание.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне в поле "Выберите задачу по названию или тегам" выбираем любую задачу
    - Кликаем "Создать битву"
  expected-result: |
    Пользователь попадает в ту игру, которую выблал.

- summary: |
    Проверка возможности писать код.
  requirement: |
    Пользователь должен иметь возможность писать код.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps: 
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне в поле выбираем Уровень 1
    - Выбираем тип игры: с ботом
    - Выбираем задачу: rect_area
    - Кликаем "Создать битву"
    - В поле пишем код: "const _ = require("lodash");"
  expected-result: |
    Код записан корректно.

- summary: |
    Проверка возможности видеть поле с кодом соперника.
  requirement: |
    Пользователь должен иметь возможность видеть код соперника.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - Выбираем тип игры: с ботом
    - Кликаем "Создать битву"
  expected-result: |
    Пользователь попадает в игру, поле соперника пустое.

- summary: |
    Проверка возможности завершить игру при неверном решении.
  requirement: |
    Пользователь должен иметь возможность проверить свой код.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps: |
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне в поле выбираем Уровень 1
    - Выбираем тип игры: с ботом
    - Выбираем задачу: rect_area
    - Кликаем "Создать битву"
    - В поле пишем код: "const _ = require("lodash");"
    - Кликаем "проверить решение"
  expected-result: |
    Пользователь видит сообщение "Решение неверно"
    
- summary: |
    Проверка возможности проверить завершить игру при правильном решении.
  requirement: |
    Пользователь должен иметь возможность проверить свой код.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps: |
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне в поле выбираем Уровень 1
    - Выбираем тип игры: с ботом
    - Выбираем задачу: rect_area
    - Кликаем "Создать битву"
    - В поле пишем код: 
    "const _ = require("lodash");
     const R = require("rambda");

     const solution = (width, length) => {
     return width * length;
     };

     module.exports = solution;"
    - Кликаем "проверить решение"
  expected-result: |
    Пользователь видит сообщение "Решение верно"
 
- summary: |
    Проверка возможности завершить игру - сдаться.
  requirement: |
    Пользователь должен иметь возможность проверить свой код.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Кликаем кнопку "Создать игру"
    - В открывающемся окне в поле выбираем Уровень 1
    - Выбираем тип игры: с ботом
    - Выбираем задачу: rect_area
    - Кликаем "Создать битву"
    - Кликаем кнопку "сдаться"
  expected-result: |
    Пользователь видит сообщение "Ты проиграл"
 
- summary: |
    Провека работы сайта на браузере Microsoft Edge Версия 109.0.1518.70 (Официальная сборка) (64-разрядная версия)
  requirement: |
    Сайт должен быть протестирован на совместимость с последними версиями браузеров.
  prerequisites: |
    Открыт браузер Microsoft Edge Версия 109.0.1518.70 (Официальная сборка) (64-разрядная версия)
  test-data: |
    - url = https://codebattle.hexlet.io/
    - браузер = Microsoft Edge Версия 109.0.1518.70 (Официальная сборка) (64-разрядная версия)
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - Вставляем url в адресную строку браузера
    - На главной странице кликаем кнопку "Войти"
    - Входим в личный кабинет
    - Кликаем кнопку "Создать игру"
    - Выбираем тип игры: с ботом
    - Кликаем "Создать битву"
  expected-result: |
    Пользователь должен попасть в игру.
  
- summary: |
    Проверка возможности зарегистрироваться на сайте.
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте.
  prerequisites: |
    Открыта главная страница: https://codebattle.hexlet.io/
  test-data: |
    Логин - Логин123
    Пароль - 123321   
    e-mail - ukrainets.123454321@yandex.ru
  steps:
    - На главной странице кликаем кнопку "Зарегистрироваться"
    - Заполнитяем Логин
    - Заполнитяем Пароль
    - Заполнитяем e-mail
    - Кликаем "зарегистрироваться"
  expected-result: |
    Пользователь должен попасть в Личный кабинет.
    
- summary: |
    Проверка возможности видеть таблицу лидеров.
  requirement: |
    Пользователь должен иметь возможность видеть таблицу лидеров.
  prerequisites: |
    Пользователь вошел в свой аккаунт
  test-data: |
    - Наличие аккаунта на Github/Личного кабинета на сайте https://codebattle.hexlet.io/ 
  steps:
    - На главной странице кликаем кнопку "Войти"
    - Выбираем поле "Войти через Гитхаб"
  expected-result: |
    Пользователь видит "Таблицу лидеров"
